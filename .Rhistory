matrix <- c(1,2,3,4,5)
matrix * 2
install.packages("dplyr")
##Analisís de datos dudosos
#importar las funciones
source("tabla.R")
setwd("D:/Projects/R studio/analysis-precipitations")
##Analisís de datos dudosos
#importar las funciones
source("tabla.R")
source("Completar datos.R")
source("clean.R")
source("analisis de datos dudosos.R")
#importar los datos
datos <- read.csv("data/CHIRINOS.csv", header = FALSE, sep = ' ')
#Damos forma a la tabla
datos <- setTable(datos)
#Verificamos datos nulos
library(mice)
md.pattern(datos, rotate.names = TRUE)
#limpiamos los datos
datos.cleaned <- clean(datos)
#verificamos datos nulos de nuevo
md.pattern(datos.cleaned, rotate.names = TRUE)
#completamos datos faltantes
datos.fill <- fillInter(datos.cleaned) # Competación de datos por interpolación
#agregar maximos totales y logaritmos
datos.fill <- addTail(datos.fill)
#calcular el valores atipicos
values.atipicos <- getXH(datos.fill)
#graficamos
getGraph(datos.fill, values.atipicos)
source("graphics.R")
#graficamos
getGraph(datos.fill, values.atipicos)
# Obtener el promedio de presipitación anual
datos.fill$mean <- rowMeans(datos.fill[2:13])
mean.anual <- mean(datos.fill$mean)
print(mean)
cat(mean)
print(mean.anual)
#importar los datos
datos <- read.csv("data/TABACONAS.csv", header = FALSE, sep = ' ')
#Damos forma a la tabla
datos <- setTable(datos)
#Verificamos datos nulos
library(mice)
#limpiamos los datos
datos.cleaned <- clean(datos)
#verificamos datos nulos de nuevo
md.pattern(datos.cleaned, rotate.names = TRUE)
#verificamos datos nulos de nuevo
md.pattern(datos.cleaned, rotate.names = TRUE)
#completamos datos faltantes
datos.fill <- fillInter(datos.cleaned) # Competación de datos por interpolación
#agregar maximos totales y logaritmos
datos.fill <- addTail(datos.fill)
#calcular el valores atipicos
values.atipicos <- getXH(datos.fill)
#graficamos
getGraph(datos.fill, values.atipicos)
# Obtener el promedio de presipitación anual
datos.fill$mean <- rowMeans(datos.fill[2:13])
mean.anual <- mean(datos.fill$mean)
print(mean.anual)
